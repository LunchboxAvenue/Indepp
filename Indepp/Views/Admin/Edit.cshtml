@model Indepp.Models.Place
@{ var googleMapApi = System.Configuration.ConfigurationManager.AppSettings["GOOGLE_MAP_API_KEY"]; }

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=@googleMapApi&libraries=places"></script>

<div class="container-fluid">
    <div class="row paperBody">
        <div class="col-lg-12">
            @Html.Partial("_NavigationIconsPartial")

            <h1 class="specialHeaderText">@Model.Name</h1>

            <p class="underHeaderText">
                Details view.
            </p>

        </div>

        <!-- Content -->
        @using (Html.BeginForm("Edit", "Admin", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            var backButtonAction = Model.Reviewed ? "Index" : "UserPlaceList";
            <!-- Controls -->
            <div class="col-md-12">
                <div class="btn-group" role="group">
                    <a href='@Url.Action(backButtonAction, "Admin")' class="btn">
                        <i class="fa fa-hand-o-left fa-2x"></i>
                    </a>
                    <button type="submit" class="btn btn-link">
                        <i class="fa fa-floppy-o fa-2x"></i>
                    </button>
                </div>
            </div>
            <!-- /Controls-->

    <div class="col-md-8">
        <section id="placeDetails">

            @if (Model.UserContributed)
            {
                <div class="editSection">
                    <div class="alert alert-danger alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        This place is user contributed. Tick the publish box when you are done reviewing this place.
                    </div>

                    <div id="googlePlacePublishHelper" class="alert alert-success alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    </div>

                    <label>Publish</label>
                    <div class="input-group">
                        @Html.EditorFor(p => p.Reviewed)
                        @Html.ValidationMessageFor(p => Model.PlaceDescription.Description)
                    </div>
                </div>
            } 

            <div class="editSection">
                <label>Search for place using google</label>
                <div class="input-group">
                    <span class="input-group-addon">Google Search</span>
                    <input class="form-control" id="googleSearchInput" type="text" />
                </div>
            </div>

            <input type="button" id="resetAllButton" class="btn btn-default" value="Reset" />

            @Html.HiddenFor(p => p.GooglePlaceId)

            <div class="editSection">
                <label>Place Details</label>
                <div class="input-group required">
                    <span class="input-group-addon" id="basic-addon1">Name</span>
                    @Html.TextBoxFor(p => p.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Name)
                </div>
                <div class="input-group">
                    <span class="input-group-addon" id="basic-addon1">Category</span>
                    @Html.DropDownListFor(p => p.Category, new SelectList(ViewBag.AvailableCategories), new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Category)
                </div>
                <div class="input-group">
                    <span class="input-group-addon">Website</span>
                    @Html.TextBoxFor(p => p.Website, new { @class = "form-control", @placeholder = "www.example.com" })
                    @Html.ValidationMessageFor(p => Model.Website)
                </div>
                <div class="input-group">
                    <span class="input-group-addon">Telephone</span>
                    @Html.TextBoxFor(p => p.Telephone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Telephone)
                </div>
                <div class="input-group">
                    <span class="input-group-addon">Email</span>
                    @Html.TextBoxFor(p => p.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Email)
                </div>
            </div>

            <div class="editSection">
                <label>Address</label>
                <div class="input-group">
                    <span class="input-group-addon">Street Number</span>
                    @Html.TextBoxFor(p => p.Address.Address1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Address.Address1)
                </div>
                <div class="input-group">
                    <span class="input-group-addon">Street Name</span>
                    @Html.TextBoxFor(p => p.Address.Address2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Address.Address2)
                </div>
                <div class="input-group required">
                    <span class="input-group-addon">City</span>
                    @Html.TextBoxFor(p => p.Address.City, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Address.City)
                </div>
                <div class="input-group required">
                    <span class="input-group-addon">Country</span>
                    @Html.TextBoxFor(p => p.Address.Country, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Address.Country)
                </div>
                <div class="input-group">
                    <span class="input-group-addon">Post Code</span>
                    @Html.TextBoxFor(p => p.Address.PostCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Address.PostCode)
                </div>
            </div>

            <div class="editSection">
                <label>Geo Location</label>
                <div class="input-group">
                    <span class="input-group-addon">Latitude</span>
                    @Html.TextBoxFor(p => p.Address.Latitude, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Address.Latitude)
                </div>
                <div class="input-group">
                    <span class="input-group-addon">Longitude</span>
                    @Html.TextBoxFor(p => p.Address.Longitude, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => Model.Address.Longitude)
                </div>
            </div>

            <div class="editSection">
                <label>Place Description</label>
                <div class="input-group">
                    @Html.TextAreaFor(p => p.PlaceDescription.Description, new { @class = "form-control", @id = "descriptionEditor" })
                    @Html.ValidationMessageFor(p => Model.PlaceDescription.Description)
                </div>
            </div>

            <div class="editSection workingHours">
                <label>Working Hours</label>
                @Html.EditorFor(p => p.WorkingHours)
            </div>

        </section>
    </div>
        }
        <!-- /Content-->

    </div>
</div>

<script type="text/javascript">
    CKEDITOR_BASEPATH = "@Url.Content("~/Scripts/ckeditor/")";
</script>

@Scripts.Render("~/bundles/editor")
@Scripts.Render("~/bundles/placesearch")

@{ 
    if (Model.UserContributed) {
        @Scripts.Render("~/bundles/placepublishhelper");
    }
}

<script>
    CKEDITOR.replace('descriptionEditor');
</script>