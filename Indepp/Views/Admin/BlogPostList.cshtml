@model PagedList.IPagedList<Indepp.Models.BlogPost>
@using PagedList.Mvc;
@using Indepp.HelperMethods;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="container-fluid">
    <div class="row paperBody">
        <div class="col-lg-12">
            <a href="#menu-toggle" id="menu-toggle">
                <i class="fa fa-long-arrow-left"></i>
            </a>

            <h1 class="specialHeaderText">Admin Section</h1>

            <p class="underHeaderText">
                This view and functionality should only be available for authenticated admin.
                This morelikely will be using "OAuth2"
            </p>
        </div>

        <!-- Main Content -->
        <div class="col-lg-12">
            <section id="adminPlaceList">
                <div class="panel panel-default">

                    <!-- List group -->
                    <div class="list-group">
                        <a href='@Url.Action("Create", "Admin")' class="list-group-item">
                            <h4 class="list-group-item-heading">Add Place</h4>
                            <p class="list-group-item-text">
                                Provides the functionality to create add a place to the database.
                            </p>
                        </a>
                        <a href='@Url.Action("ArticleCreate", "Admin")' class="list-group-item">
                            <h4 class="list-group-item-heading">Add Article</h4>
                            <p class="list-group-item-text">
                                Provides the functionality to create an article, link it to a place and add it to the database.
                            </p>
                        </a>
                        <a href='@Url.Action("BlogPostCreate", "Admin")' class="list-group-item">
                            <h4 class="list-group-item-heading">Add News/Blog entry</h4>
                            <p class="list-group-item-text">
                                Provides the functionality to add a blog/news entry that will be displayed on the home page.
                            </p>
                        </a>
                        <a href='@Url.Action("Statistics", "Admin")' class="list-group-item">
                            <h4 class="list-group-item-heading">Statistics</h4>
                            <p class="list-group-item-text">
                                View current Place statistics.
                            </p>
                        </a>
                    </div>
                </div>

                <ul class="nav nav-tabs nav-justified">
                    <li role="presentation" class='@Html.IsActive("Admin", "Index")'>
                        <a href='@Url.Action("Index", "Admin")'>Places</a>
                    </li>
                    <li role="presentation" class='@Html.IsActive("Admin", "ArticleList")'>
                        <a href='@Url.Action("ArticleList", "Admin")'>Articles</a>
                    </li>
                    <li role="presentation" class='@Html.IsActive("Admin", "BlogPostList")'>
                        <a href='@Url.Action("BlogPostList", "Admin")'>Blog Posts</a>
                    </li>
                    <li role="presentation" class='@Html.IsActive("Admin", "UserPlaceList")'>
                        <a href='@Url.Action("UserPlaceList", "Admin")'>User Places</a>
                    </li>
                </ul>

                <div>
                    <section id="blogPostList">
                        <h2 class="uppercaseText">List of all places</h2>

                        @using (Html.BeginForm("BlogPostList", "Admin", FormMethod.Get))
                        {
                            <p>
                                Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                                <input type="submit" class="btn btn-default" value="Search" />
                            </p>
                        }

                        <table class="table table-hover">
                            <tr>
                                <th>
                                    @Html.ActionLink("ID", "BlogPostList", new { sortOrder = ViewBag.IDSortParam, currentFilter = ViewBag.CurrentFilter })
                                </th>
                                <th>
                                    @Html.ActionLink("Title", "BlogPostList", new { sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter })
                                </th>
                                <th>
                                    Short Description
                                </th>
                                <th>
                                    Actions
                                </th>
                            </tr>

                            @foreach (var blogPost in Model)
                            {
                                <tr>
                                    <td>
                                        @blogPost.ID
                                    </td>
                                    <td>
                                        @blogPost.Title
                                    </td>
                                    <td>
                                        @blogPost.ShortDescription
                                    </td>
                                    <td>
                                        <a href='@Url.Action("BlogPostDetails", "Admin", new { id = blogPost.ID })'>
                                            <i class="fa fa-file-text-o fa-2x"></i>
                                        </a>
                                        <a href='@Url.Action("BlogPostEdit", "Admin", new { id = blogPost.ID })'>
                                            <i class="fa fa-pencil fa-2x"></i>
                                        </a>
                                        <a href='@Url.Action("BlogPostDelete", "Admin", new { id = blogPost.ID })'>
                                            <i class="fa fa-trash-o fa-2x"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </table>
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                        @Html.PagedListPager(Model, page => Url.Action("Index",
                            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

                    </section>
                </div>
            </section>
        </div>
        <!-- Main Content Ends-->

    </div>
</div>