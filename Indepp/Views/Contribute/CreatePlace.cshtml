@model Indepp.Models.Place

<div class="container-fluid">
    <div class="row paperBody">
        <div class="col-lg-12">
            <a href="#menu-toggle" id="menu-toggle">
                <i class="fa fa-long-arrow-left"></i>
            </a>

            <h1 class="specialHeaderText">Submit Your Place</h1>

            <p class="underHeaderText">
                Have found an awesome place?
                Contribute your finding with the others!
                Your place will be reviewed by our team and will be shortly published. 
                Big thanks for all the contributors!
            </p>
        </div>

        @using (Html.BeginForm("CreatePlace", "Contribute", FormMethod.Post))
        {
            @*@Html.AntiForgeryToken()*@

            <!-- Controls -->
            <div class="col-md-12">
                <div class="btn-group" role="group">
                    <a href='@Url.Action("Index", "Home")' class="btn">
                        <i class="fa fa-hand-o-left fa-2x"></i>
                    </a>
                    <button type="submit" class="btn btn-link">
                        <i class="fa fa-check fa-2x"></i>
                    </button>
                </div>
            </div>
            <!-- /Controls -->

            <!-- Main Content -->
            <div class="col-md-8">
                <section id="placeDetails">
                    <div class="editSection">
                        <label>Place Details</label>
                        <div class="input-group">
                            <span class="input-group-addon">Name</span>
                            @Html.TextBoxFor(p => p.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Name)
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon">Category</span>
                            @Html.TextBoxFor(p => p.Category, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Category)
                        </div>
                    </div>

                    <div class="editSection">
                        <label>Address</label>
                        <div class="input-group">
                            <span class="input-group-addon">Address 1</span>
                            @Html.TextBoxFor(p => p.Address.Address1, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Address.Address1)
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon">Address 2</span>
                            @Html.TextBoxFor(p => p.Address.Address2, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Address.Address2)
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon">Address 3</span>
                            @Html.TextBoxFor(p => p.Address.Address3, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Address.Address3)
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon">City</span>
                            @Html.TextBoxFor(p => p.Address.City, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Address.City)
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon">County</span>
                            @Html.TextBoxFor(p => p.Address.County, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Address.County)
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon">Country</span>
                            @Html.TextBoxFor(p => p.Address.Country, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Address.Country)
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon">Post Code</span>
                            @Html.TextBoxFor(p => p.Address.PostCode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Address.PostCode)
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon">Latitude</span>
                            @Html.TextBoxFor(p => p.Address.Latitude, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Address.Latitude)
                        </div>
                        <div class="input-group">
                            <span class="input-group-addon">Longitude</span>
                            @Html.TextBoxFor(p => p.Address.Longitude, new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => Model.Address.Longitude)
                        </div>
                    </div>

                    <div class="editSection">
                        <label>Place Description</label>
                        <div class="input-group">
                            @Html.TextAreaFor(p => p.PlaceDescription.Description, new { @class = "form-control", @id = "descriptionEditor" })
                            @Html.ValidationMessageFor(p => Model.PlaceDescription.Description)
                        </div>
                    </div>

                    <div class="editSection">
                        <label>Working Hours</label>
                        @Html.EditorFor(p => p.WorkingHours)
                    </div>

                </section>
            </div>
            <!-- /Main Content-->
        }

    </div>
</div>

@Scripts.Render("~/bundles/editor")

<script>
    CKEDITOR.replace('descriptionEditor');
</script>